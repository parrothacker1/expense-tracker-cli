name: Release Go Binaries

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]         
        exclude:
          - goos: windows
            goarch: arm64
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25.1'

    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        # Add .exe extension for Windows binaries
        if [ $GOOS = "windows" ]; then
          go build -v -o expensetracker.exe .
        else
          go build -v -o expensetracker .
        fi

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./expensetracker${{ matrix.goos == 'windows' && '.exe' || '' }}
        asset_name: expensetracker-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
        asset_content_type: application/octet-stream
